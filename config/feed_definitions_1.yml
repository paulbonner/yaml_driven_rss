--- 
:categories:
- &all !ruby/object:FeedCategory
  title: All RSS Feeds
  order: 1
- &notices !ruby/object:FeedCategory
  title: Notices, Messaging and Bulletins
  order: 2
- &grid !ruby/object:FeedCategory
  title: Grid and Market Information
  order: 3


:column_sets:
- &standard_columns
  text: bp.id, bp.action_parameters,bp.collage_asset_type, bp.collage_asset_type as item_title, bp.action_parameters + ' ' + bp.collage_asset_type as item_description, cd.filesize as filesize, bp.last_modified_on, bp.url
- &mktinfo_columns
  text: collage_asset_type, name as item_title, '' as item_description, filesize as filesize, last_modified_on, url
- &news_columns
  text:   name as item_title, release_date, name as item_description, last_modified_on, url, filesize, collage_asset_type
- &prr_columns
  text: left('PRR',3) + right(action_parameters,len(action_parameters)-charindex('/',action_parameters)) + ' ' +  name  as item_title,  CONVERT(char(10), last_modified_on, 101) +  ', ' +  issue_action as item_description, last_modified_on, url, filesize, collage_asset_type
- &calendar_columns
  text: vfc.description as item_title, vfc.event_start as start_time,  vfc.room_number as room_number, vfc.event_end as end_time, vfc.location_name, vfc.room_number,'placeholder' as item_description, 0 as filesize, bp.last_modified_on, bp.url 
- &training_columns
  text: vs.name as item_title, 'tmp' as item_description, pm_reg.value as registration_info, pm.value as overview, vs.id, vs.collage_asset_type, 0 as filesize, vs.last_modified_on, vs.url
- &services_columns
  text: id, url as action_parameters,collage_asset_type, description, fileName as item_title, name as item_description,  filesize, last_modified_on, url   
- &opsmessages_columns
  text: notificationid as id, status, priority, publishdate as last_modified_on, notification_text as item_description, notificationtype as item_title, 0 as filesize, '' as collage_asset_type, 'services/comm/mkt_notices/opsmessages/' as url  
- &mobs_columns
  text: id, last_modified_on, notification_date, reference_number, long_name as item_title, description as item_description, filesize, url, collage_asset_type, reference_number 
- &pobs_columns
  text: id, last_modified_on, notification_date, reference_number, long_name as item_title, long_description as item_description, filesize, url, collage_asset_type, reference_number 
- &scns_columns
  text: base_page_id as id, url as action_parameters,collage_asset_type, description as item_description, fileName as item_title,  filesize, last_modified_on, url   
- &outages_columns
  text: id, incident_type, 'services/comm/mkt_notices/outage_notices/index' as url, start_at, end_at, start_at as last_modified_on, system_affected, cancelled, notes, 0 as filesize, '' as collage_asset_type, incident_type as item_title, notes as item_description
:sources:
- &standard_source
  text: base_pages bp left outer join core_datas cd on cd.id=bp.core_data_id
- &mktinfo_source
  text: vw_mktinfos
- &calendar_source
  text: vw_calendars vfc left join base_pages bp on vfc.id=bp.id
- &news_source
  text: vw_news
- &prr_source
  text: vw_issue_updates
- &training_source
  text: vw_services vs left outer join page_metadatas pm_reg on pm_reg.base_page_id=vs.id and pm_reg .name='Registration Information' left outer join page_metadatas pm on pm.base_page_id=vs.id and pm.name='Overview' 
- &services_source
  text: vw_services
- &opsmessages_source
  text: notifications
- &scns_source
  text: vw_scns
- &outages_source
  text: incidents
  
:definitions:
- &ancillary_service !ruby/object:FeedDefinition
  category: *grid
  name: ancillary_service
  title: Ancillary Services Offer Selected - Daily Reports
  link: /mktinfo/prices/asoffer/
  description: Receive notifications of recently published Ancillary Services (AS) portfolio offer curves. ERCOT posts the highest offer selected for each settlement interval and the name of the entity that submitted the offer. 	
  count: 15
  conditions_clause: controller = 'mktinfo/prices' and action = 'asoffer' and collage_asset_type = 'AS Offer Selected Report'
  select_clause: *mktinfo_columns
  from_clause: *mktinfo_source
- &bes_offer !ruby/object:FeedDefinition
  category: *grid
  name: bes_offer
  title: Balancing Energy Services Offer Dispatched – Daily Reports
  link: /mktinfo/prices/besoffer/
  description: Receive notifications of recently published balancing energy services (BES) portfolio offer curves for each area where available. ERCOT posts the highest offer dispatched for each settlement interval and the name of the entity that submitted the offer.  
  count: 15
  conditions_clause: controller = 'mktinfo/prices' and action = 'besoffer' and collage_asset_type = 'BES Offer Selected Report'
  select_clause: *mktinfo_columns
  from_clause: *mktinfo_source
- &replacement_reserve !ruby/object:FeedDefinition
  category: *grid
  name: replacement_reserve
  title: Replacement Reserve Service – Daily Reports
  description: Receive notification of the Replacement Reserve Service (RPRS) daily reports which contain the units procured and binding transmission constraints for Local Congestion, overall capacity procured, the Market Clearing Prices of Capacity (MCPCs) and shadow prices for RPRS.
  link: /mktinfo/services/rprsdr/
  count: 15
  conditions_clause: controller = 'mktinfo/services' and action = 'rprsdr' and collage_asset_type = 'Replacement Reserve SDR'
  select_clause: *mktinfo_columns
  from_clause: *mktinfo_source
- &prr !ruby/object:FeedDefinition
  category: *protocols
  name: prr
  title: Protocol Revision Requests
  link: /mktrules/protocols/prr
  description: Track new postings on Protocol Revision Requests (PRRs) that are currently in the approval process. 
  count: 15
  conditions_clause: collage_asset_type like 'prr%'
  select_clause: *prr_columns
  from_clause: *prr_source
  query_processing: map{|t| arr=t.url.split("/"); t.url=arr[0..5].join("/") + "/index" unless t.url.include?("index");t.item_title.gsub!("index","Summary"); t.item_description=t.last_modified_on.strftime("%b %d, %Y") + ", Initiated" if t.item_description.nil?;t}
- &calendar !ruby/object:FeedDefinition
  category: *scheduled
  name: calendar
  title: Meeting Calendar
  link: /calendar
  description: Stay current on all ERCOT committee, group, and task force scheduled meetings by subscribing to the Meeting Calendar feed. 
  count: 15
  conditions_clause: vfc.id in (SELECT TOP 15 vf.id from vw_fast_calendars vf left join base_pages bp on vf.id=bp.id ORDER BY last_modified_on desc)
  select_clause: *calendar_columns
  from_clause: *calendar_source
  query_processing: map{|c| c.start_time=Date.today.strftime("%b %e, %Y") if c.start_time.blank?; c.end_time=c.start_time if c.end_time.blank?; c.item_title += ", " + c.start_time.strftime("%b %e, %Y"); location_str= c.location_name.nil? ? "":c.location_name + ", " + (c.room_number || '');  c.item_description=c.start_time.strftime("%b %d, %Y %I:%M %p")+ "--" +  c.end_time.strftime("%I:%M %p")  + ", " + location_str ;c }
- &training !ruby/object:FeedDefinition
  category: *scheduled
  name: training
  title: Training Updates
  count: 15
  link: /services/training/
  description: Get instant notifications on new training opportunities by subscribing to the Training RSS Feed. ERCOT offers training on both market and system operations.
  conditions_clause: vs.collage_asset_type like 'training%' and vs.collage_asset_type <> 'Training Document'
  select_clause: *training_columns
  from_clause: *training_source
  query_processing: map{|t| t.item_description=(t.overview || '') + (t.registration_info || ''); t}.select{|t| t.meta_data_value("ReleaseDate") == "" || Date.parse(t.meta_data_value("ReleaseDate")) < (Date.today)}
- &protocol_library !ruby/object:FeedDefinition
  category: *protocols
  link: /mktrules/protocols/library/
  description: Stay informed by viewing current and past versions of the ERCOT protocols including summaries of the revisions. 
  name: protocol_library
  title: Protocol Library
  count: 15
  conditions_clause: bp.controller='mktrules/protocols' and bp.action='library' and (bp.url like '%.zip' or bp.url like '%.pdf' or bp.url like '%.doc')
  select_clause: *standard_columns
  from_clause: *standard_source
  query_processing: map{|pl| is_update = pl.action_parameters.size >7; path_arr=pl.url.split("/");  date_str=Date.parse(pl.item_description.split(" ")[0]).strftime("%b %Y");pl.item_title=date_str + " " + pl.item_title;  pl.item_title.gsub!("Complete Archive","Combined");pl.item_title.gsub!("Archive","By Section");pl.item_title.gsub!("Summmary","Revision Summary") if pl.item_title; pl.item_description="";pl}
- &daily_grid_ops !ruby/object:FeedDefinition
  category: *grid
  name: daily_grid_ops
  title: Daily Grid Operations Report
  link: /gridinfo/congestion/operations/
  description: Receive notification of recently published daily power peaks, constraints and other significant events. 
  count: 15
  conditions_clause: bp.collage_asset_type = 'Daily Operations Report' 
  select_clause: *standard_columns
  from_clause: *standard_source
  query_processing: map{|bp| md=bp.page_metadatas;bp.item_description= bp.item_description + ". Peak Load=" + md.select{|pm| pm.name=="Peak Load"}.first.value + ", Peak Hour=" + md.select{|pm| pm.name=="Peak Hour"}.first.value + ", Planned Peak=" + md.select{|pm| pm.name=="Planned Peak"}.first.value + ", Planned Peak Hour=" + md.select{|pm| pm.name=="Planned Peak Hour"}.first.value;bp;}
- &press_release !ruby/object:FeedDefinition
  category: *notices
  name: press_release
  title: ERCOT Press Releases
  link: /news/press_releases/
  description: Receive notifications of breaking ERCOT news and media advisories by subscribing to the Press Release RSS Feed.
  count: 15
  conditions_clause: collage_asset_type like 'press%' and url not like '%index'
  select_clause: *news_columns
  from_clause: *news_source
  query_processing: map{|pr| pr.item_description=pr.release_date.strftime("%b %d, %Y") + ",  " + pr.item_description if pr.release_date;pr}
  base_class: VwNew
- &whole_site !ruby/object:FeedDefinition
  category: *all
  name: whole_site
  title: All Content Changes
  link: www.ercot.com
  description: Receive notifications of recently published content of all ERCOT RSS feeds.
  count: 50
  conditions_clause: 1=1
  select_clause: *standard_columns
  from_clause: *standard_source
  query_processing: select{|ws|(!(ws.url=~/.jpg|.gif|.css|.png/)) && (! (ws.item_description=~ /xref/))}.map{|ws| ws.url.gsub("www","nodal") if ws.item_description =~ /Nodal/;ws}
- &eils !ruby/object:FeedDefinition
  category: *grid
  name: eils
  title: Emergency Interruptible Load Service
  link: /services/programs/load/eils/
  description: Subscribe to the 'EILS' RSS feed to receive notification when Emergency Interruptible Load Service (EILS) related documents are updated.
  count: 15
  conditions_clause: controller = 'services/programs/load/eils' and action in  ('contracts', 'keydocs', 'meterinfo') and collage_asset_type = 'EILS Document'
  select_clause: *services_columns
  from_clause: *services_source
  query_processing: map{|eil_doc| eil_doc.item_description << (", " + eil_doc.description.to_s) unless eil_doc.description.blank?; eil_doc.item_description << (", last updated " + eil_doc.last_modified_on.strftime("%b %d, %Y")); eil_doc}
- &opsmessages !ruby/object:FeedDefinition
  category: *notices
  name: opsmessages
  title: Operations Messages
  link: services/comm/mkt_notices/opsmessages/
  description: Subscribe to the ‘Ops Messages’ RSS feed to receive updated messages from the ERCOT Control Room on operational information, ancillary services, curtailments, violations and more.
  count: 15
  conditions_clause: 1=1 
  select_clause: *opsmessages_columns
  from_clause: *opsmessages_source
  query_processing: map{|ops| ops.url << "/" + ops.last_modified_on.strftime("%Y") + "/" + ops.last_modified_on.strftime("%m") ;ops.item_title << " -- " + ops.last_modified_on.strftime("%b %d, %Y %I:%m:%S %p") + " (" + ops.status + ")" ;ops}
  connection_class: Notification
- &mobs !ruby/object:FeedDefinition
  category: *notices
  name: mobs
  title: Market Operations Bulletins
  link: services/comm/mkt_notices/mobs/index
  description: Receive notices regarding ERCOT processes, procedures and protocols affecting market transactions.
  count: 15
  conditions_clause: (collage_asset_type ='MOB' and notification_date is not null and reference_number is not null) 
  select_clause: *mobs_columns
  from_clause: *services_source
  query_processing: map{|mob| puts mob.to_yaml;mob.item_title << " -- " + mob.last_modified_on.strftime("%b %d, %Y %I:%m:%S %p");mob} 
- &pobs !ruby/object:FeedDefinition
  category: *notices
  name: pobs
  title: Power Operations Bulletins
  link: services/comm/mkt_notices/pobs/index
  description: Receive recent changes to operating procedures.
  count: 15
  conditions_clause: collage_asset_type ='POB'  and notification_date is not null and reference_number is not null 
  select_clause: *pobs_columns
  from_clause: *services_source
  query_processing: map{|pob| pob.item_title << " -- " + pob.notification_date.strftime("%b %d, %Y ");pob} 
  order_by: collage_asset_id desc
- &scns !ruby/object:FeedDefinition
  category: *notices
  name: scns
  title: System Change Notices
  link: services/comm/mkt_notices/scns/index
  description: Receive notices of upcoming changes to ERCOT systems resulting from PRRs and SCRs.
  count: 15
  conditions_clause: collage_asset_type = 'SCN'
  select_clause: *scns_columns
  from_clause: *scns_source
  query_processing: map{|scn| scn.item_title << " -- " + scn.last_modified_on.strftime("%b %d, %Y");  scn.item_description << ", ." + FeedDefinition.file_extension(scn.url) + ", " + FeedDefinition.human_size(scn.filesize); scn}
  order_by:
- &outages !ruby/object:FeedDefinition
  category: *notices
  name: outages
  title: System Outage Notices
  link: services/comm/mkt_notices/outage_notices/index
  description: Receive notices on outages for ERCOT systems.
  count: 15
  conditions_clause: 1=1
  select_clause: *outages_columns
  from_clause: *outages_source
  query_processing: map{|scn| scn.item_description=scn.item_title if scn.item_description.nil?;end_str = ''; end_str=", end at:&nbsp;" + scn.end_at.strftime('%b %d, %Y %I:%m:%S %p') unless scn.end_at.nil?;scn.item_title = scn.system_affected + ", "  + scn.last_modified_on.strftime("%b %d, %Y");scn.item_description.to_s << ".&nbsp;Start at:&nbsp;" + scn.start_at.strftime("%b %d, %Y %I:%m:%S %p") + end_str;scn}
  order_by:
  connection_class: Incident
